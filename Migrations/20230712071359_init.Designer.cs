// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillAssessment.Models;

#nullable disable

namespace SkillAssessment.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20230712071359_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillAssessment.Models.Assessment", b =>
                {
                    b.Property<int>("Assessment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Assessment_ID"));

                    b.Property<string>("Assesment_Departmenr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Assessment_DateOfCompletion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Assessment_NoOfQuestions")
                        .HasColumnType("int");

                    b.Property<int>("Assessment_Points")
                        .HasColumnType("int");

                    b.Property<DateTime>("Assessment_Requested_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Assessment_SelectedLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Assessment_SelectedTopic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Assessment_TimeDuration")
                        .HasColumnType("time");

                    b.Property<int?>("StartAssessmentQuestion_ID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersUser_ID")
                        .HasColumnType("int");

                    b.HasKey("Assessment_ID");

                    b.HasIndex("StartAssessmentQuestion_ID");

                    b.HasIndex("UsersUser_ID");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("SkillAssessment.Models.Questions", b =>
                {
                    b.Property<int>("QnID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QnID"));

                    b.Property<int?>("Answer")
                        .HasColumnType("int");

                    b.Property<string>("Explaination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TopicsTopic_Id")
                        .HasColumnType("int");

                    b.HasKey("QnID");

                    b.HasIndex("TopicsTopic_Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("SkillAssessment.Models.Result", b =>
                {
                    b.Property<int>("Result_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Result_Id"));

                    b.Property<int>("AnsweredCount")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionsQnID")
                        .HasColumnType("int");

                    b.Property<int>("SkippedCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("int");

                    b.Property<int>("UnansweredCount")
                        .HasColumnType("int");

                    b.HasKey("Result_Id");

                    b.HasIndex("QuestionsQnID");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("SkillAssessment.Models.StartAssessment", b =>
                {
                    b.Property<int>("Question_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Question_ID"));

                    b.Property<string>("Option_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int?>("Question_Answer")
                        .HasColumnType("int");

                    b.Property<string>("Question_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Question_ID");

                    b.ToTable("StartAssessment");
                });

            modelBuilder.Entity("SkillAssessment.Models.Topics", b =>
                {
                    b.Property<int>("Topic_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Topic_Id"));

                    b.Property<string>("Topic_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Topic_Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<string>("User_Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("User_DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_Departmenr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("User_Designation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("User_EduLevel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("User_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("User_Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("User_LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("User_Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("User_Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("User_PhoneNo")
                        .HasColumnType("bigint");

                    b.HasKey("User_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SkillAssessment.Models.Assessment", b =>
                {
                    b.HasOne("SkillAssessment.Models.StartAssessment", "StartAssessment")
                        .WithMany("Assessment")
                        .HasForeignKey("StartAssessmentQuestion_ID");

                    b.HasOne("User", "Users")
                        .WithMany("assessments")
                        .HasForeignKey("UsersUser_ID");

                    b.Navigation("StartAssessment");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SkillAssessment.Models.Questions", b =>
                {
                    b.HasOne("SkillAssessment.Models.Topics", "Topics")
                        .WithMany("Questions")
                        .HasForeignKey("TopicsTopic_Id");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("SkillAssessment.Models.Result", b =>
                {
                    b.HasOne("SkillAssessment.Models.Questions", "Questions")
                        .WithMany("Results")
                        .HasForeignKey("QuestionsQnID");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("SkillAssessment.Models.Questions", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("SkillAssessment.Models.StartAssessment", b =>
                {
                    b.Navigation("Assessment");
                });

            modelBuilder.Entity("SkillAssessment.Models.Topics", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("assessments");
                });
#pragma warning restore 612, 618
        }
    }
}
